problem: https://leetcode.com/problems/number-of-zero-filled-subarrays/description/?envType=daily-question&envId=2025-08-19

solution:
// Approach: 1
class Solution {
public:
    long long zeroFilledSubarray(vector<int>& nums) {
        long long res = 0, cntZero = 0;
        for(int num : nums){
            if(num == 0) {
                cntZero++;
                res += cntZero;
            }
            else cntZero = 0;
        }
        return res;
    }
};

// Approach: 2
class Solution {
public:
    long long zeroFilledSubarray(vector<int>& nums) {
        long long res = 0, cntZero = 0;
        for(int num : nums){
            if(num == 0) cntZero++;
            else {
                long long curr = (cntZero * (cntZero+1)) / 2;
                res += curr;
                cntZero = 0;
            }
        }
        if(cntZero != 0) res += (cntZero * (cntZero+1)) / 2;
        return res;
    }
};
