problem: https://leetcode.com/problems/new-21-game/description/?envType=daily-question&envId=2025-08-17

solution:
// Optimum
class Solution {
public:
    double new21Game(int n, int k, int maxPts) {
        vector<double> prob(n+1, 0.0);
        prob[0] = 1;
        double curr = (k == 0) ? 0 : 1;

        for(int i=1; i<=n; i++){
            prob[i] = curr / maxPts;
            if(i < k) curr += prob[i];
            if(i-maxPts >= 0 && i-maxPts < k) curr -= prob[i-maxPts];
        }

        return accumulate(prob.begin()+k, prob.end(), 0.0);
    }
};


// Brute Force 
class Solution {
public:
    double new21Game(int n, int k, int maxPts) {
        vector<double> prob(n+1, 0.0);
        prob[0] = 1;

        for(int i=1; i<=n; i++){
            for(int j=1; j<=maxPts; j++){
                if(i-j >= 0 && i-j <k) prob[i] += (prob[i-j] / maxPts);
            }
        }

        return accumulate(prob.begin()+k, prob.end(), 0.0);
    }
};
