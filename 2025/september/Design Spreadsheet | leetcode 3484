problem: https://leetcode.com/problems/design-spreadsheet/description/?envType=daily-question&envId=2025-09-19

solution:
class Spreadsheet {
private:
    unordered_map<string, int> um;

public:
    Spreadsheet(int rows) {
        
    }
    
    void setCell(string cell, int value) {
        um[cell] = value;
    }
    
    void resetCell(string cell) {
        um[cell] = 0;
    }
    
    int getValue(string formula) {
        formula = formula.substr(1);
        for(int i=0; i<formula.size(); i++){
            if(formula[i] == '+'){
                string str1 = formula.substr(0, i), str2 = formula.substr(i+1);
                int left = str1[0] >= 'A' && str1[0] <= 'Z' ? um[str1] : stoi(str1);
                int right = str2[0] >= 'A' && str2[0] <= 'Z' ? um[str2] : stoi(str2);
                return left + right;
            }
        }
        return 0;
    }
};

/**
 * Your Spreadsheet object will be instantiated and called as such:
 * Spreadsheet* obj = new Spreadsheet(rows);
 * obj->setCell(cell,value);
 * obj->resetCell(cell);
 * int param_3 = obj->getValue(formula);
 */
